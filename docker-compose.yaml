version: '2'
services:
    db:
      image: mysql:latest
      environment:
        MYSQL_ROOT_PASSWORD: 'toor'
        MYSQL_USER: 'user'
        MYSQL_PASS: 'pass'
      volumes:
        - ./data/mysql:/var/lib/mysql
      ports:
        - 3306:3306
    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      environment:
        PMA_HOST: db
        PMA_PORT: 3306
      restart: always
      ports:
        - 8081:80
    rabbit:
      image: rabbitmq:3-management
      ports:
        - 5672:5672
        - 15672:15672
    reverse-proxy:
      # The official v3 Traefik docker image
      image: traefik:v3.2
      # Enables the web UI and tells Traefik to listen to docker
      command: --api.insecure=true --providers.docker -providers.file.filename=/etc/traefik/dynamic-config.yml
      ports:
        # The HTTP port
        - "80:80"
        # The HTTPS port
        - "443:443" 
        # The Web UI (enabled by --api.insecure=true)
        - "8080:8080"
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
        - ./traefik/traefik.yml:/etc/traefik/traefik.yml 
        - ./traefik/dynamic-config.yml:/etc/traefik/dynamic-config.yml  # Configuration dynamique de Traefik
    whoami:
      image: traefik/whoami
      deploy:
        replicas: 3  # Cela démarre trois instances de whoami
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
    api:
      build: ./api
      ports:
        - 3000:3000
      restart: unless-stopped
      depends_on:
        - db
      environment:
        DB_USER: root
        DB_PASSWORD: toor
        DB_DATABASE: server
        DB_HOST: db
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`api.localhost`)"  # Ton domaine pour l'API
        # - "traefik.http.routers.api.entrypoints=https"  # Indiquer que le routage est fait via HTTPS
        # - "traefik.http.routers.api.tls=true"  # Activer TLS pour HTTPS
        # - "traefik.http.routers.api.tls.certresolver=http"  # Utilisation de Let's Encrypt pour obtenir le certificat
        - "traefik.http.services.api.loadbalancer.server.port=3000"  # Indiquer que le service écoute sur le port 3000 à l'intérieur du container
    influxdb2:
      image: influxdb:2.7
      ports:
        - 8086:8086
      environment:
        DOCKER_INFLUXDB_INIT_MODE: setup
        DOCKER_INFLUXDB_INIT_USERNAME: test
        DOCKER_INFLUXDB_INIT_PASSWORD: test12345
        DOCKER_INFLUXDB_INIT_ORG: docs
        DOCKER_INFLUXDB_INIT_BUCKET: home
      volumes:
        - ./data/influxdb2:/var/lib/influxdb2
        - ./influxdb2:/etc/influxdb2